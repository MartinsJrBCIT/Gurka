#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>

using namespace std;

void PLAYTITLE();
int getNumberOfPlayers();
void GAMESTART(int numPlayers);
void delay(int seconds);
void simulateTurns(int numPlayers, string deck[]);
int CHOOSEYOURCARD(int numPlayers, string deck[]);
int main() {
    PLAYTITLE();
    cout << "\nPress Enter to start the game..." << endl;

    // Wait for the user to press Enter
    cin.ignore(); // Clears the input buffer and waits for Enter

    cout << "Starting the game..." << endl;

    // Wait for 2 seconds
    delay(2);

    // Get the number of players
    int numPlayers = getNumberOfPlayers();

    // Start the game with the specified number of players
    GAMESTART(numPlayers);

    return 0;
}
void PLAYTITLE() {
    cout << "Welcome to...\n\n\n" << endl;
    cout << " .----------------.  .----------------.  .----------------.  .----------------.  .----------------. " << endl;
    cout << "| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |" << endl;
    cout << "| |    ______    | || | _____  _____ | || |  _______     | || |  ___  ____   | || |      __      | |" << endl;
    cout << "| |  .' ___  |   | || ||_   _||_   _|| || | |_   __ \\    | || | |_  ||_  _|  | || |     /  \\     | |" << endl;
    cout << "| | / .'   \\_|   | || |  | |    | |  | || |   | |__) |   | || |   | |_/ /    | || |    / /\\ \\    | |" << endl;
    cout << "| | | |    ____  | || |  | '    ' |  | || |   |  __ /    | || |   |  __'.    | || |   / ____ \\   | |" << endl;
    cout << "| | \\ `.___]  _| | || |   \\ `--' /   | || |  _| |  \\ \\_  | || |  _| |  \\ \\_  | || | _/ /    \\ \\_ | |" << endl;
    cout << "| |  `._____.'   | || |    `.__.'    | || | |____| |___| | || | |____||____| | || ||____|  |____|| |" << endl;
    cout << "| |              | || |              | || |              | || |              | || |              | |" << endl;
    cout << "| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |" << endl;
    cout << " '----------------'  '----------------'  '----------------'  '----------------'  '----------------' " << endl;

    cout << "Welcome to the card game against AI!" << endl;
    cout << "Each player is dealt 7 cards from a shuffled deck of 52 cards." << endl;
    cout << "Players take turns starting with the dealer's left." << endl;
    cout << "The goal is to have the lowest card when everyone is down to their last card." << endl;
    cout << "Players can match or play a higher card; if unable, they must play their lowest card." << endl;
    cout << "The winner of each round starts the next round by playing any card of their choice." << endl;
    cout << "The game continues for 4 rounds, and the player with the lowest card at the end wins!" << endl;
    cout << "No cheating! Have fun!" << endl;
}

int getNumberOfPlayers() {
    int numPlayers;
    do {
        cout << "Enter the number of players (2-4): ";
        cin >> numPlayers;
        if (numPlayers < 2 || numPlayers > 4) {
            cout << "Invalid number of players. Please enter a value between 2 and 4." << endl;
        }
    } while (numPlayers < 2 || numPlayers > 4);
    return numPlayers;
}

void GAMESTART(int numPlayers) {

    cout << "Game has started with " << numPlayers << " players!\n" << endl;

    // Array of all 52 cards in a French-suited deck
    string suits[] = {" of ♡", " of ♤", " of ♢", " of ♧"};
    string ranks[] = {"Card: 2", "Card: 3", "Card: 4", "Card: 5", "Card: 6", "Card: 7", "Card: 8", "Card: 9", "Card: 10", "Card: J", "Card: Q", "Card: K", "Card: A"};
    string deck[52];

    // Populate the deck
    int index = 0;
    for (int i = 0; i < 4; i++) { // Loop through suits
        for (int j = 0; j < 13; j++) { // Loop through ranks
            deck[index++] = ranks[j] + suits[i];
        }
    }

    // Seed the random number generator
    srand((unsigned int)time(0));

    cout << "Game starting in 3..." << endl;
    delay(1);
    cout << "                 2..." << endl;
    delay(1);
    cout << "                 1..." << endl;
    delay(2);
    cout << "             Game starting!\n" << endl;
    delay(2);



    // Call the simulateTurns function
    simulateTurns(numPlayers, deck);
}

void simulateTurns(int numPlayers, string deck[]) {

    // Loop through each player
    for (int player = 1; player <= numPlayers; player++) {
        cout << "Player " << player;
        if (player == 1) {
            cout << " (You)";
        }
        cout << " draws: " << endl;
        delay(1);

        // Determine the number of cards each player gets
        int cardsToDraw = (player == 1) ? 5 : 5; // First player gets 5 cards, others also get 5 cards

        // Display the cards for the current player
        for (int card = 0; card < cardsToDraw; card++) {
            int randomIndex = rand() % 52;
            cout << deck[randomIndex];
            if (card < cardsToDraw - 1) cout << ", \n"; // Add a comma between cards
        }
        cout << endl;

        delay(1);

        // If it's the first player, allow them to choose a card
        if (player == 1) {
            cout <<"\n(your cards)" << endl;
            // Simulate the player choosing a card (placeholder for now)
        } else {
            cout << "AI Player " << player << " is thinking...\n";
            delay(1);
            cout << "AI Player " << player << " has played their card.\n";

        }

        cout << endl;
    }
}
void delay(int seconds) {
    clock_t start_time = clock();
    while (clock() < start_time + seconds * CLOCKS_PER_SEC) {
        // Busy-wait loop
    }
}
int CHOOSEYOURCARD(int numPlayers, string deck[]) {
    int cardChoice;
    cout << "Choose a card to play (1-" << numPlayers * 5 << "): ";
    cin >> cardChoice;
    return cardChoice;
}
