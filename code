#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>

using namespace std;

void PLAYTITLE();
int getNumberOfPlayers();
void GAMESTART(int numPlayers);
void delay(int seconds);
void simulateTurns(int numPlayers, string deck[]);
int main() {
    PLAYTITLE();
    cout << "Press any key to start the game..." << endl;

    if (cin.get()) {
        cout << "Starting the game..." << endl;

        // Wait for 2 seconds
        delay(2);

        // Get the number of players
        int numPlayers = getNumberOfPlayers();

        // Start the game with the specified number of players
        GAMESTART(numPlayers);
    } else {
        cout << "Error starting the game." << endl;
        return 1;
    }

    return 0;
}

void PLAYTITLE() {
    cout << "Welcome to...\n\n\n" << endl;
    cout << " .----------------.  .----------------.  .----------------.  .----------------.  .----------------. " << endl;
    cout << "| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |" << endl;
    cout << "| |    ______    | || | _____  _____ | || |  _______     | || |  ___  ____   | || |      __      | |" << endl;
    cout << "| |  .' ___  |   | || ||_   _||_   _|| || | |_   __ \\    | || | |_  ||_  _|  | || |     /  \\     | |" << endl;
    cout << "| | / .'   \\_|   | || |  | |    | |  | || |   | |__) |   | || |   | |_/ /    | || |    / /\\ \\    | |" << endl;
    cout << "| | | |    ____  | || |  | '    ' |  | || |   |  __ /    | || |   |  __'.    | || |   / ____ \\   | |" << endl;
    cout << "| | \\ `.___]  _| | || |   \\ `--' /   | || |  _| |  \\ \\_  | || |  _| |  \\ \\_  | || | _/ /    \\ \\_ | |" << endl;
    cout << "| |  `._____.'   | || |    `.__.'    | || | |____| |___| | || | |____||____| | || ||____|  |____|| |" << endl;
    cout << "| |              | || |              | || |              | || |              | || |              | |" << endl;
    cout << "| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |" << endl;
    cout << " '----------------'  '----------------'  '----------------'  '----------------'  '----------------' " << endl;
    cout << "In this multiplayer card game:" << endl;
    cout << "Answer them correctly to win!" << endl;
    cout << "Good luck!" << endl;
}

int getNumberOfPlayers() {
    int numPlayers;
    do {
        cout << "Enter the number of players (2-4): ";
        cin >> numPlayers;
        if (numPlayers < 2 || numPlayers > 4) {
            cout << "Invalid number of players. Please enter a value between 2 and 4." << endl;
        }
    } while (numPlayers < 2 || numPlayers > 4);
    return numPlayers;
}

void GAMESTART(int numPlayers) {
    cout << "Game has started with " << numPlayers << " players!" << endl;

    // Array of all 52 cards in a French-suited deck
    string suits[] = {"♡", "♤", "♢", "♧"};
    string ranks[] = {"2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K", "A"};
    string deck[52];

    // Populate the deck
    int index = 0;
    for (int i = 0; i < 4; i++) { // Loop through suits
        for (int j = 0; j < 13; j++) { // Loop through ranks
            deck[index++] = ranks[j] + suits[i];
        }
    }

    // Seed the random number generator
    srand((unsigned int)time(0));

    // Call the simulateTurns function
    simulateTurns(numPlayers, deck);
}

void simulateTurns(int numPlayers, string deck[]) {
    // Simulate turns for each player
    for (int turn = 1; turn <= numPlayers; turn++) {
        cout << " Showing player " << turn << " Cards... Don't cheat!";

        if (turn == 1) {
            delay(5);
            // First player gets 5 cards
            for (int card = 0; card < 5; card++) {
                int randomIndex = rand() % 52;
                cout << deck[randomIndex];
                if (card < 4) cout << ", "; // Add a comma between cards
            }
        } else {
            // Other players get 1 card
            int randomIndex = rand() % 52;
            cout << deck[randomIndex];
        }

        cout << endl;
        delay(1); // Add a small delay between turns
    }
}
void delay(int seconds) {
    clock_t start_time = clock();
    while (clock() < start_time + seconds * CLOCKS_PER_SEC) {
        // Busy-wait loop
    }
}
